string serialize_array(string[] arr, string delimiter=",") {
if (arr.length() == 0) {
return " ";
}
string result = arr[0];
for(int i=1; i < arr.length(); i++) {
result += (delimiter + arr[i]);
}
return result;
}

string[] deserialize_array(string text, string delimiter=",") {
string[] result;
if (text == " ") {
return result;
}
result = string_split(text, delimiter, true);
return result;
}

string serialize_2d_array(string[][] arr, string outer=",", string inner="|") {
if (arr.length() == 0) {
return " ";
}
string result = "";
for(int i=0; i < arr.length(); i++) {
assert(arr[i].length() > 0);
string s = serialize_array(arr[i], inner);
if (i == 0) {
result += s;
} else {
result += (outer + s);
}
}
return result;
}

string[][] deserialize_2d_array(string text, string outer=",", string inner="|") {
string[][] result;
if (text == " ") {
result.resize(0);
return result;
}
string[] outside = string_split(text, outer, true);
result.resize(outside.length());
for(int i=0; i < outside.length(); i++) {
string[] inside = deserialize_array(outside[i], inner);
result[i] = inside;
}
return result;
}

string construct_message(string[] segment) {
string result = segment[0];
for(int i=1; i < segment.length(); i++) {
if (segment[i] == "") {
break;
}
result += ("\t" + segment[i]);
}
return result;
}

void send_reliable_msg(int peer_id, int channel, string topic, string subtopic, string p1="", string p2="", string p3="", string p4="", string p5="", string p6="", string p7="", string p8="", string p9="", string p10="") {
string[] body = {topic, subtopic, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10};
string constructed_body = construct_message(body);
log.add_entry("Reliable:" + peer_id + "|" + channel + "|" + constructed_body);
host.send_reliable(peer_id, constructed_body, channel);
}

void send_unreliable_msg(int peer_id, int channel, string topic, string subtopic, string p1="", string p2="", string p3="", string p4="", string p5="", string p6="", string p7="", string p8="", string p9="", string p10="") {
string[] body = {topic, subtopic, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10};
string constructed_body = construct_message(body);
log.add_entry("Unreliable:" + peer_id + "|" + channel + "|" + constructed_body);
host.send_unreliable(peer_id, constructed_body, channel);
}